ARG ARCH=
FROM ${ARCH}alpine:3.18
# FROM ${ARCH}alpine:3.15

USER root
LABEL Maintainer="ZAF Soft" \
  Description="container with Nginx 1.20 & PHP 8.1 based on Alpine Linux."

# ENV BUILD_DATE date -u +"%Y-%m-%dT%H:%M:%SZ"

ENV PHPRUN_DEPS \
  curl \
  git \
  make \
  mariadb-client \
  patch \
  rsync
# ENV PHP_CLI_SERVER_WORKERS 4

RUN apk update && apk --no-cache add \
  && apk --update upgrade \
  && apk add --upgrade --virtual \
  build-base gcc wget  autoconf libmcrypt-dev libzip-dev curl \
  bash shadow \
  php81 \
  php81-fpm \
  php81-pecl-apcu \
  php81-pecl-igbinary \
  php81-pecl-xdebug \
  php81-bcmath \
  php81-ctype \
  php81-curl \
  php81-dom \
  # php81-redis \
  php81-fileinfo \
  php81-gd \
  php81-gmp \
  php81-iconv \
  php81-json \
  php81-mbstring \
  php81-opcache \
  php81-openssl \
  php81-pcntl \
  php81-pdo_mysql \
  php81-phar \
  php81-session \
  php81-simplexml \
  php81-tokenizer \
  php81-xml \
  php81-xmlreader \
  php81-xmlwriter \
  php81-zip \
  # php81-pecl-redis \
  $PHPRUN_DEPS \
  --upgrade supervisor \
  python3 \
  busybox-extras \
  nginx \
  nano \
  && ln -fs php81 /usr/bin/php \
  && mkdir -p /run/php \
  #   && echo 'xdebug.mode=debug' >> /etc/php81/conf.d/50_xdebug.ini \
  #   && echo 'xdebug.discover_client_host=1' >> /etc/php81/conf.d/50_xdebug.ini \
  #   && echo 'xdebug.profiler_output_name=cachegrind.out.%p.%r' >> /etc/php81/conf.d/50_xdebug.ini \
  && php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
  && php composer-setup.php \
  --install-dir=/usr/bin \
  --filename=composer1 \
  --1 \
  && php composer-setup.php \
  --install-dir=/usr/bin \
  --filename=composer2 \
  --2 \
  && ln -s composer2 /usr/bin/composer \
  && php -r "unlink('composer-setup.php');" \
  && rm -fr /var/cache/apk/*

# instal supervisor-stdut
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install wheel \
  && pip install supervisor \
  && pip install git+https://github.com/coderanger/supervisor-stdout
ENV PATH="/usr/share/nginx/html/vendor/drush/drush:$PATH"

# mixed log
RUN touch /tmp/access.log
RUN touch /tmp/error.log
RUN chown -R nginx:nginx /tmp/*.log
RUN ln -sf /tmp/access.log /dev/stdout
RUN ln -sf /tmp/error.log /dev/stderr

# Supervisor config
COPY ./infra/config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# COPY ./infra/config/nginx/cert/nginx-selfsigned.key /etc/nginx/conf.d/private/nginx-selfsigned.key
# COPY ./infra/config/nginx/cert/nginx-selfsigned.crt /etc/nginx/conf.d/file_crt/nginx-selfsigned.crt

# Override nginx's default config
COPY ./infra/config/nginx/default-web-local.conf /etc/nginx/conf.d/default.conf
COPY ./infra/config/nginx/nginx.conf /etc/nginx/nginx.conf

#php
COPY ./infra/config/php/php.ini /etc/php81/php.ini
COPY ./infra/config/php/php-fpm.conf /etc/php81/php-fpm.conf
COPY ./infra/config/php/www.conf /etc/php81/php-fpm.d/www.conf

# Override default nginx welcome page
COPY ./web /usr/share/nginx/html/web
# COPY ./web/assets /usr/share/nginx/html/web/assets
# COPY ./web/bootstrap /usr/share/nginx/html/web/bootstrap
# COPY ./web/config /usr/share/nginx/html/web/config
# COPY ./web/database /usr/share/nginx/html/web/database
# COPY ./web/lang /usr/share/nginx/html/web/lang
# COPY ./web/resources /usr/share/nginx/html/web/resources
# COPY ./web/routes /usr/share/nginx/html/web/routes
# COPY ./web/storage /usr/share/nginx/html/web/storage
# COPY ./web/vendor /usr/share/nginx/html/web/vendor
# COPY ./web/artisan /usr/share/nginx/html/web/artisan

# COPY ./infra/config/.env.local /usr/share/nginx/html/web/.env
# COPY ./web/*.json /usr/share/nginx/html/web
# COPY ./web/*.lock /usr/share/nginx/html/web
# COPY ./web/favicon.ico /usr/share/nginx/html/web/favicon.ico
# COPY ./web/index.php /usr/share/nginx/html/web/index.php
# COPY ./web/vite.config.js /usr/share/nginx/html/web/vite.config.js

WORKDIR /usr/share/nginx/html/web

# RUN composer install

# change owner under web
RUN usermod -ou 100 nginx
RUN groupmod -og 101 nginx
RUN chown -Rf nginx:nginx /usr/share/nginx/html/web

# Copy Scripts
COPY ./infra/config/nginx/start-local-web.sh /usr/share/nginx/html/start.sh
RUN usermod -ou 1000 nginx
RUN groupmod -og 1000 nginx
RUN chmod +x /usr/share/nginx/html/start.sh

EXPOSE 1234
CMD ["/usr/share/nginx/html/start.sh"]
# HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:1324/healt

